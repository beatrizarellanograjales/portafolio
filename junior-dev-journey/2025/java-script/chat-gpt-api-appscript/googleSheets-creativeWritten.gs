/**
* Custom function to generate a short phrase via OpenAI
* in the same language as the input word.
* @param {string} originalWord - A word/phrase in any language.
* @return {string} A short text generated by OpenAI based on that word, in the same language.
*/
function OpenAI_PHRASE(originalText) {
  // üîí 1. Reemplaza con tu propia OpenAI API key
  const OPENAI_API_KEY = "YOUR_API_KEY_HERE"; // ‚úÖ API Key eliminada por seguridad

  // 2. Prepara los mensajes para la conversaci√≥n
  //    - "system" define el estilo o contexto si es necesario
  //    - "user" es la entrada del usuario
  const messages = [
    {
      role: "system",
      content: "You are a helpful translator assistant that writes creative short sentences in English with a given word. With a maximum of 6 words."
    },
    {
      role: "user",
      content: `Gimme the definition and the category of "${originalText}"`
    }
  ];

  // 3. Prepara el contenido para la solicitud a la API
  const payload = {
    model: "gpt-4o-mini",  // ‚úÖ Puedes cambiar a "gpt-4" si prefieres
    messages: messages,
    max_tokens: 50,        // üìè Controla la longitud de la respuesta
    temperature: 0.7       // üî• Controla la creatividad (0 = preciso, 1 = creativo)
  };

  // 4. Configura la solicitud para UrlFetchApp
  const options = {
    method: "post",                           // üì° M√©todo HTTP POST
    contentType: "application/json",         // üìã Formato de datos en JSON
    headers: {
      Authorization: `Bearer ${OPENAI_API_KEY}`  // üîê Clave API en los encabezados
    },
    payload: JSON.stringify(payload),        // üì¶ Convierte el objeto a cadena JSON
    muteHttpExceptions: true                 // üîï Permite capturar errores en la respuesta
  };

  try {
    // 5. Env√≠a la solicitud a la API de OpenAI
    const response = UrlFetchApp.fetch("https://api.openai.com/v1/chat/completions", options);
    const data = JSON.parse(response.getContentText());

    Logger.log(data);  // üõ†Ô∏è Verifica la respuesta completa en los registros

    // 6. Extrae el texto generado por la API
    if (data && data.choices && data.choices.length > 0) {
      let answer = data.choices[0].message.content.trim();

      // ‚úÇÔ∏è Elimina comillas si la respuesta est√° entrecomillada
      answer = answer.replace(/^"(.*)"$/, "$1");

      return answer;
    }
    return "No result from OpenAI";  // ‚ö†Ô∏è Mensaje si la API no devuelve datos
  } catch (error) {
    return "Error: " + error;  // ‚ùå Devuelve el error si ocurre alg√∫n fallo
  }
}
